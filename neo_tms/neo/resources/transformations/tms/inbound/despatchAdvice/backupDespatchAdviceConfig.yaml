---
# we will consider this flow in furture
# Remove Shipment from planned Load api call.
# Use Case:
#    This Api will be fired when actual systemShipmentLegId's system
#    load will be not equal to incoming load of Despatch Advice message
# input: Despatch Advice document along with
#         the shipment, load, shippinglocation code enrichment data
# output: Form Api call for removing shipment from current load all load with correct shipment details of the DA document

#- sourceModel: despatchAdvice
#  targetModel: process_remove_shipment_from_load
#  modelMapping:
#    segmentListMapping:
#    - targetSegment: removeFromPlannedLoadData
#      segmentListVariableMapping:
#      - variableName: shipment_data_look_up
#        operation:
#          - customFunction:
#              functionName: get_unique_shipment_lookup_from_payload
#      sourceSegment: shipment.data
#
#      fieldVariableMapping:
#        - variableName: current_da
#          operation:
#            - customFunction:
#                functionName: get_data_from_lookup
#                fields: [field: shipmentNumber, field: shipFromLocationCode, field: global_variable.shipment_data_look_up]
#        - variableName: input_load_id
#          variableValue: global_variable.current_da.despatchAdviceTransportInformation.transportLoadId
#        - variableName: shipment_list
#          operation:
#            - customFunction:
#                functionName: get_shipment_as_list
#                fields: [field: shipmentLeg.systemShipmentLegID]
#
#      fieldMapping:
#        - targetField: systemLoadID
#          sourceField: systemLoadID
#          condition:
#            - customFunction:
#                functionName: check_new_and_old_load_id_not_same
#                fields: [field: global_variable.input_load_id, field: systemLoadID]
#        - targetField: systemShipmentLegID
#          sourceField: global_variable.shipment_list
#          condition:
#            - customFunction:
#                functionName: check_new_and_old_load_id_not_same
#                fields: [field: global_variable.input_load_id, field: systemLoadID]


################################################################################################


# we will consider this flow in future
# Add shipment fromm planned load
# Use Case:
#    This Api will be fired when actual systemShipmentLegId's system
#    load will be not equal to incoming load of Despatch Advice message
# input: Despatch Advice document along with
#         the shipment, load, shippinglocation code enrichment data
# output: Form Api call to assign shipment to correct load for all load with correct shipment details of the DA document

#- sourceModel: despatchAdvice
#  targetModel: process_add_shipment_to_planned_load
#  modelMapping:
#    segmentListMapping:
#    - targetSegment: assignToPlannedLoadData
#      segmentListVariableMapping:
#      - variableName: shipment_data_look_up
#        operation:
#          - customFunction:
#              functionName: get_unique_shipment_lookup_from_payload
#      sourceSegment: shipment.data
#
#      fieldVariableMapping:
#        - variableName: current_da
#          operation:
#            - customFunction:
#                functionName: get_data_from_lookup
#                fields: [field: shipmentNumber, field: shipFromLocationCode, field: global_variable.shipment_data_look_up]
#        - variableName: input_load_id
#          variableValue: global_variable.current_da.despatchAdviceTransportInformation.transportLoadId
#        - variableName: shipment_list
#          operation:
#            - customFunction:
#                functionName: get_shipment_as_list
#                fields: [field: shipmentLeg.systemShipmentLegID]
#
#      fieldMapping:
#        - targetField: systemLoadID
#          sourceField: global_variable.input_load_id
#          condition:
#            - customFunction:
#                functionName: check_new_and_old_load_id_not_same
#                fields: [field: global_variable.input_load_id, field: systemLoadID]
#        - targetField: systemShipmentLegID
#          sourceField: global_variable.shipment_list
#          condition:
#            - customFunction:
#                functionName: check_new_and_old_load_id_not_same
#                fields: [field: global_variable.input_load_id, field: systemLoadID]


##################################################################################################


# we will consider this flow in future
# Remove container(shipment line) from shipment.
# Use Case:
#    This Api will be fired when there will be some line which is not passed in DA message
#    which will be treated as deleted lines.
# input: Despatch Advice document along with
#         the shipment, load, shippinglocation code enrichment data
# output: Form Api call for all shipments who is having missing shipment lines
#
#- sourceModel: despatchAdvice
#  targetModel: process_shipment_container_remove
#  modelMapping:
#    segmentListMapping:
#    - targetSegment: payload
#      segmentListVariableMapping:
#        # get the shipment which is having unique shipment and DA is having line action code not deleted
#      - variableName: tms_shipment
#        operation:
#          - customFunction:
#              functionName: get_unique_shipment
#      - variableName: missing_container
#        operation:
#        - customFunction:
#            functionName: get_containers_for_delete
#            fields: global_variable.tms_shipment
#
#      sourceSegment: global_variable.missing_container
#      fieldMapping:
#      - targetField: containerActionEnumVal
#        default: "AT_DELETE"
#      segmentListMapping:
#      - targetSegment: container
#        fieldMapping:
#        - targetField: systemContainerID
#          sourceField: deletedSystemContainerId


############################################################################################

# we will consider this flow in future
# Remove Shipment which is missing in the DA document.
# Use Case:
#    This Api will be Ffired when a set of shipment/shipments which is planned in this load but not passed in this load
#
# input: Despatch Advice document along with
#         the shipment, load, shippinglocation code enrichment data
# output: Form Api call for remove shipment which is missing in the load.

#- sourceModel: despatchAdvice
#  targetModel: process_remove_shipment_from_load
#  modelMapping:
#    segmentListMapping:
#      - targetSegment: payload
#        segmentListVariableMapping:
#          - variableName: despatch_advice_with_srn
#            operation:
#              - customFunction:
#                  functionName: get_despatch_advice_with_srn
#          - variableName: shipment_leg
#            operation:
#              - customFunction:
#                  functionName: get_shipment_leg
#        segmentListMapping:
#          - targetSegment: removeFromPlannedLoadData
#            sourceSegment: global_variable.despatch_advice_with_srn
#            condition:
#              - customFunction:
#                  functionName: not_blank
#                  fields: global_variable.despatch_advice_with_srn
#
#            fieldVariableMapping:
#            - variableName: loadDocument
#              operation:
#                - customFunction:
#                    functionName: get_current_load
#                    fields: despatchAdviceTransportInformation.transportLoadId
#            - variableName: stopDocument
#              operation:
#                - customFunction:
#                    functionName: get_stop_document
#                    fields: [field: global_variable.loadDocument, field: shipFrom.primaryId]
#            - variableName: missing_shipments
#              operation:
#              - customFunction:
#                  functionName: get_missing_shipment
#                  fields: [field: global_variable.stopDocument, field: global_variable.shipment_leg]
#
#            fieldMapping:
#            - targetField: systemLoadID
#              sourceField: global_variable.loadDocument.systemLoadID
#              condition:
#              - customFunction:
#                  functionName: not_blank
#                  fields: global_variable.missing_shipments
#            - targetField: systemShipmentLegID
#              sourceField: global_variable.missing_shipments


######################################################################################################


# we will consider this flow in future
# Update reference Number for Shipments which is missing in the DA document.
# Use Case:
#    This Api will be fired when a set of shipment/shipments which is planned in this load but not passed in this load
#
# input: Despatch Advice document along with
#         the shipment, load, shippinglocation code enrichment data
# output: Form Api call to update the reference Number for shipment which is missing in the load.

#- sourceModel: despatchAdvice
#  targetModel: process_reference_number_update
#  modelMapping:
#    segmentListMapping:
#      - targetSegment: payload
#        segmentListVariableMapping:
#          - variableName: despatch_advice_with_srn
#            operation:
#              - customFunction:
#                  functionName: get_despatch_advice_with_srn
#          - variableName: shipment_leg
#            operation:
#              - customFunction:
#                  functionName: get_shipment_leg
#        sourceSegment: global_variable.despatch_advice_with_srn
#        segmentListMapping:
#          - targetSegment: referenceNumberUpdateData
#            segmentListVariableMapping:
#            - variableName: loadDocument
#              operation:
#                - customFunction:
#                    functionName: get_current_load
#                    fields: despatchAdviceTransportInformation.transportLoadId
#            - variableName: stopDocument
#              operation:
#                - customFunction:
#                    functionName: get_stop_document
#                    fields: [field: global_variable.loadDocument, field: shipFrom.primaryId]
#            - variableName: missing_shipments
#              operation:
#              - customFunction:
#                  functionName: get_missing_shipments_for_ref_update
#                  fields: [field: global_variable.stopDocument, field: global_variable.shipment_leg]
#            sourceSegment: global_variable.missing_shipments
#            fieldMapping:
##
##            - targetField: referenceNumberTypeCode
##              default: "WM_REPLAN_YN"
##            - targetField: referenceNumberCategoryEnumVal
##              default: "RNC_SHPM"
##            - targetField: referenceNumber
##              default: "DO_NOT_REPLAN"
##            - targetField: referenceNumberActionEnumVal
##              default: "AT_ADD"
#
#            - targetField:  referenceNumberEntityKey
#              operations:
#              - customFunction:
#                  functionName: get_reference_number_entity_key
#                  fields: [field: global_variable.loadDocument, field: shipment_id]
#            injectPayload:
#            operations:
#              - customFunction:
#                  functionName: get_reference_number_update_data
#                  fields: [field: shipment_id]


#############################################################################################################



# we will consider this flow in future
# Update Shipments when it's status is not marked as Confirmed.
# Use Case:
#    This Api will be fired for shipment containers update(weight, volume, quantity).
#
# input: Despatch Advice document along with
#         the shipment, load, shippinglocation code enrichment data
# output: Form Api call to update the reference Number for shipment which is missing in the load.

#- sourceModel: despatchAdvice
#  targetModel: process_shipment_update
#  modelMapping:
#    segmentListMapping:
#    - targetSegment: payload
#      sourceSegment: shipment.data
#      condition:
#        - customFunction:
#            functionName: check_shipment_operational_status
#            fields: currentShipmentOperationalStatusEnumVal
#
#      fieldVariableMapping:
#      - variableName: current_shipment
#        variableValue: current_payload
#      - variableName: despatchAdviceLineItem
#        operation:
#        - customFunction:
#            functionName: get_unique_containers
#            fields: shipmentNumber
#
#      fieldMapping:
#      - targetField: systemShipmentID
#        sourceField: shipmentNumber
#        condition:
#        - customFunction:
#            functionName: not_blank
#            fields: global_variable.despatchAdviceLineItem
#      - targetField: containerActionEnumVal
#        operations:
#          - customFunction:
#              functionName: get_container_action_val
#              fields: global_variable.despatchAdviceLineItem
#
#      segmentListMapping:
#      - targetSegment: container
#        sourceSegment: global_variable.despatchAdviceLineItem
#        fieldVariableMapping:
#          -  variableName: adviceLineItemNumber
#             variableValue: lineItem.transactionalReference.lineItemNumber
#          -  variableName: shipmentMode
#             variableValue: global_variable.current_shipment.shipmentEntryModeEnumVal
#          -  variableName: adviceOrderNumber
#             variableValue: lineItem.transactionalReference.entityId
#          -  variableName: inputQty
#             variableValue: lineItem.despatchedQuantity.value
#          -  variableName: inputWeightType
#             variableValue: lineItem.transactionalTradeItem.transactionalItemData.transactionalItemWeight.measurementType
#          -  variableName: measurementUnitCode
#             variableValue: lineItem.transactionalTradeItem.transactionalItemData.transactionalItemWeight.measurementValue.measurementUnitCode
#          -  variableName: inputVolumeType
#             variableValue: lineItem.avpList.name
#          -  variableName: grossVolMeasurementUnitCode
#             variableValue: lineItem.totalGrossVolume.measurementUnitCode
#          -  variableName: unitVolMeasurementUnitCode
#             variableValue: lineItem.avpList.qualifierCodeName
#          -  variableName: shipmentContainerDocument
#             operation:
#               - customFunction:
#                   functionName: get_shipment_container_document
#                   # get this with the current iteration
#                   fields: [field: global_variable.current_shipment, field: global_variable.adviceLineItemNumber]
#
#          -  variableName: aggregatedLinesDoc
#             operation:
#               - customFunction:
#                   functionName: get_aggregated_Lines
#                   # get this with the current iteration
#                   fields: [field: global_variable.current_shipment, field: global_variable.current_shipment.shipmentNumber, field: global_variable.adviceOrderNumber, field: global_variable.adviceLineItemNumber]
#
#          - variableName: aggregatedQuantity
#            operation:
#            - customFunction:
#                functionName: get_aggregated_qty_sum
#                # get this with the current iteration
#                fields: global_variable.aggregatedLinesDoc
#
#          - variableName: aggregatedInputWeightValue
#            operation:
#            - customFunction:
#                functionName: get_aggregated_unit_weight
#                # get this with the current iteration
#                fields: global_variable.aggregatedLinesDoc
#
#          - variableName: aggregatedInputUnitNetVolume
#            operation:
#            - customFunction:
#                functionName: get_aggregated_unit_net_volume
#                # get this with the current iteration
#                fields: global_variable.aggregatedLinesDoc
#
#          - variableName: aggregatedInputTotalGrossVolume
#            operation:
#            - customFunction:
#                functionName: get_aggregated_total_volume
#                # get this with the current iteration
#                fields: global_variable.aggregatedLinesDoc
#
#          - variableName: totalWeightOfContainer
#            operation:
#            - customFunction:
#                functionName: get_total_weight_of_container
#                # get this with the current iteration
#                fields: [field: global_variable.inputWeightType,field: global_variable.aggregatedInputWeightValue,field: global_variable.measurementUnitCode, field: global_variable.aggregatedQuantity, property: tms.uom.weight]
#
#          - variableName: inputUnitWeight
#            operation:
#            - customFunction:
#                functionName: get_input_weight
#                # get this with the current iteration
#                fields: [field: global_variable.inputWeightType, field: global_variable.aggregatedInputWeightValue, field: global_variable.measurementUnitCode, field: global_variable.aggregatedQuantity, field: global_variable.totalWeightOfContainer, property: tms.uom.weight]
#
#
#          - variableName: totalVolumeOfContainer
#            operation:
#            - customFunction:
#                functionName: get_total_volume_of_container
#                # get this with the current iteration
#                fields: [field: global_variable.inputVolumeType, field: global_variable.aggregatedInputTotalGrossVolume, field: global_variable.grossVolMeasurementUnitCode, field: global_variable.unitVolMeasurementUnitCode, field: global_variable.aggregatedQuantity, property: tms.uom.volume]
#
#          - variableName: containerUnitVolume
#            operation:
#            - customFunction:
#                functionName: get_container_unit_volume
#                # get this with the current iteration
#                fields: [field: global_variable.inputVolumeType, field: global_variable.aggregatedInputTotalGrossVolume, field: global_variable.grossVolMeasurementUnitCode, field: global_variable.aggregatedQuantity, field: global_variable.totalVolumeOfContainer, property: tms.uom.volume]
#
#        injectPayload:
#          - customFunction:
#              functionName: remove_field_from_payload
#              # get this with the current iteration
#              fields: [field: global_variable.shipmentContainerDocument, constant: "containerShippingInformation",constant: "quantity",constant: "numberOfUnits",constant: "weightByFreightClass",constant: "transportOrderInfo"]
#
#          - customFunction:
#              functionName: add_shipment_mode
#              # get this with the current iteration
#              fields: [field: global_variable.shipmentContainerDocument, field: global_variable.shipmentMode]
#
#        fieldMapping:
#          - targetField: quantity
#            condition:
#              - customFunction:
#                  functionName: check_override_planned_true
#                  fields: [field: global_variable.shipmentContainerDocument, property: override.planned.estimate]
#            sourceField: global_variable.aggregatedQuantity
#          - targetField: quantity
#            condition:
#              - customFunction:
#                  functionName: check_override_planned_false
#                  fields: [field: global_variable.shipmentContainerDocument, property: override.planned.estimate]
#            sourceField: global_variable.shipmentContainerDocument.quantity
#
#        segmentMapping:
#        - targetSegment: containerShippingInformation
#          condition:
#            - customFunction:
#                functionName: check_shipment_document
#                fields: global_variable.shipmentContainerDocument
#
#      #    sourceSegment: global_variable.shipmentContainerDocument.containerShippingInformation
#          injectPayload:
#            - customFunction:
#                functionName: remove_field_from_payload
#                # get this with the current iteration
#                fields: [field: global_variable.shipmentContainerDocument.containerShippingInformation, constant: "nominalWeight", constant: "volume"]
#          fieldMapping:
#          - targetField: volume
#            sourceField: global_variable.containerUnitVolume
#          - targetField: nominalWeight
#            sourceField: global_variable.inputUnitWeight
#        segmentListMapping:
#        - targetSegment: weightByFreightClass
#          condition:
#            - customFunction:
#                functionName: check_shipment_document
#                fields: [field: global_variable.shipmentContainerDocument]
#          fieldMapping:
#            - targetField: freightClassCode
#              sourceField: global_variable.shipmentContainerDocument.weightByFreightClass[0].freightClassCode
#            - targetField: freightClassNominalWeight
#              condition:
#                - customFunction:
#                    functionName: check_override_planned_true
#                    fields: [field: global_variable.shipmentContainerDocument, property: override.planned.estimate]
#              sourceField: global_variable.inputUnitWeight
#            - targetField: freightClassNominalWeight
#              condition:
#                - customFunction:
#                    functionName: check_override_planned_false
#                    fields: [field: global_variable.shipmentContainerDocument, property: override.planned.estimate]
#              sourceField: global_variable.shipmentContainerDocument.weightByFreightClass[0].freightClassNominalWeight

######################################################################################################################
